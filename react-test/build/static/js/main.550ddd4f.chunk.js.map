{"version":3,"sources":["reportWebVitals.js","pages/HomePage/components/HomePageHeader.js","services/firebase.js","pages/RegisterPage/RegisterPage.js","pages/LoginPage/LoginPage.js","pages/AdminPage/AdminPage.js","pages/HomePage/components/RightSidebar.js","pages/HomePage/components/ChatRoom.js","pages/HomePage/components/NewChatGroupDialog.js","pages/HomePage/components/ProfileLandingPage.js","pages/HomePage/HomePage.js","pages/LandingPage/components/Header.js","pages/LandingPage/components/Navigation.js","pages/LandingPage/components/Footer.js","pages/LandingPage/components/Description.js","pages/LandingPage/LandingPage.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","root","flexGrow","appbar","background","menuButton","marginRight","spacing","title","HomePageHeader","props","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","loggedIn","username","handleClose","menuButtonStyle","margin","textTransform","fontSize","menuBoxStyle","textAlign","rightMenuStyle","width","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Link","id","href","style","textDecoration","Box","Button","display","p","flexDirection","aria-controls","aria-haspopup","onClick","event","currentTarget","marginTop","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","Avatar","toUpperCase","ListSubheader","component","lineHeight","name","Divider","marginBottom","MenuItem","handleLogout","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","database","Copyright","align","Date","getFullYear","Alert","elevation","CustomSnackbar","reason","closeSnackbar","Snackbar","show","autoHideDuration","severity","message","CustomTextField","error","Grid","item","xs","sm","small","undefined","TextField","helperText","fullWidth","label","type","password","autoComplete","onChange","e","target","value","CustomAutocomplete","Autocomplete","options","universities","renderInput","params","university","setUniversity","RegisterPage","onSubmit","bind","state","surname","email","formControl","errors","statusMessage","statusSeverity","snackbarOpen","submissionInProgress","checkRemoveError","setName","setSurname","setEmail","setUsername","setPassword","validateName","validateSurname","validateUsername","validatePassword","validateEmail","validateUniversity","validateFormControl","validateInputs","this","setState","field","nowValid","currentErrors","val","endsWith","includes","length","valid","trim","funcs","idx","preventDefault","validationFuncs","stateUpdate","validusername","ref","get","snapshot","forEach","data","set","contacts","chats","Container","maxWidth","CssBaseline","paper","avatar","form","noValidate","container","FormControlLabel","control","Checkbox","required","submit","CircularProgress","size","justify","mt","Component","withStyles","alignItems","backgroundColor","palette","secondary","main","withTheme","LoginPage","loginStatus","loginAttempt","handleSubmit","token","localStorage","setItem","JSON","stringify","credentials","fetch","method","body","headers","response","json","validLogin","once","exists","snapshotVal","userToken","Math","random","toString","substring","setToken","window","location","reload","getToken","to","autoFocus","AdminPage","loading","sessionStorage","removeItem","userlist","map","_id","handleDelete","renderList","UserMenu","s","anchorForMenu","textContent","slice","RightSidebar","renderContacts","renderUserMenu","contact","List","ListItem","button","ListItemIcon","ListItemText","primary","ChatRoom","roomId","messagelist","current_message","userTypingMsg","userJoinedOrLeftMsg","handleNewMessageChange","handleSendMessage","handleExit","onKeyDown","scrollToBottom","messagesEnd","scrollIntoView","prevProps","newRoomId","orderByChild","on","Object","values","typingUsers","keys","filter","user","join","dbpath","userTyping","updates","update","messageData","text","sender","timestamp","ServerValue","TIMESTAMP","push","socket","emit","userId","keyCode","i","split","startsWith","flex","renderMessages","el","placeholder","RoomTheme","icon","desc","ContactTheme","added","handleClick","newContact","contactData","removeContact","addContact","RoomThemeStep","activeRadioButtonName","handleChange","setGroupType","charCode","handleNext","roomtheme","RadioGroup","onKeyPress","Radio","getRoomLabelElement","RoomNameStep","groupName","handleSemester","setGroupName","setClassSemester","err","currentGroupname","groupType","Select","classSemester","defaultValue","FormHelperText","disabled","universityOfUser","ContactsStep","addedContacts","setContactList","indexToRemove","indexOf","splice","LoadingStep","NewChatGroupFormStepper","step","Stepper","activeStep","steps","index","Step","StepLabel","getStepContent","NewChatGroupDialog","submitted","handleBack","setActiveTab","roomData","dataFromChild","Dialog","DialogTitle","DialogContent","DialogActions","SearchBar","chatrooms","getOptionLabel","chatroom","ProfileLandingPage","searchbar","createRef","removeChatRoomDropdown","setChatRoom","changeActiveChatRoomOnKeystreak","jsonResponse","current","focus","currentActiveTab","dropdown","activeTabId","currentChatroomList","chatroomlist","key","selectedChatroom","newActiveTab","NestedList","renderIcon","parent","closest","Collapse","in","items","selected","LeftNavigation","nests","chatroomsOpen","announcementsOpen","contactsOpen","handleClickChatrooms","handleClickAnnouncements","handleClickContacts","handleClickNewGroup","handleClickGroupSearch","announcement_rooms","HomePage","getItem","parse","chat_rooms","isActiveTab","renderMainSide","userLoggedIn","tokenStringFromSS","userTokenFromSS","tokenStringFromLS","userTokenFromLS","tabId","tabid","button_styles","Header","Footer","Description","alt","src","Home","Main","tokenString","path","exact","LandingPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.550ddd4f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport './HomePageHeader.css'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport Divider from '@material-ui/core/Divider'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\nimport Link from '@material-ui/core/Link'\n\nimport NotificationsIcon from '@material-ui/icons/Notifications'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    appbar: {\n        background: \"#6495ED\"\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n  \n  export default function HomePageHeader(props) {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n  \n    // If a username is passed in as props, we're logged in \n    const username = props.username ? props.username : null\n    const loggedIn = username !== null\n\n    const handleMenu = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n  \n    const menuButtonStyle = {\n      margin: \"0 15px\", \n      textTransform: \"none\", \n      fontSize: \"16px\"\n    }\n\n    let menuBoxStyle = {\n      textAlign: \"center\"\n    }\n    \n    let menuDivStyle = {\n      width: \"100%\",\n    }\n\n    let rightMenuStyle = {\n      width: \"10%\",\n    }\n\n    if (!loggedIn) {\n      menuBoxStyle = {\n        textAlign: \"center\"\n      }\n\n    }\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appbar}>\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link id=\"link-main\" href=\"/\" color=\"inherit\" style={{textDecoration: \"none\"}} >\n                KampüsteKal\n              </Link>\n            </Typography>\n            <Box style={menuDivStyle}>\n              <Box style={menuBoxStyle}>\n                <Button color=\"inherit\" style={menuButtonStyle}>KampüsteKal</Button>\n                <Button color=\"inherit\" style={menuButtonStyle}>Blog</Button>\n                <Button color=\"inherit\" style={menuButtonStyle}>İletişim</Button>\n              </Box>\n            </Box>\n            {loggedIn ?\n              <Box style={rightMenuStyle} display=\"flex\" p={1} flexDirection=\"row\">\n                <Box p={1.25}>\n                  <Typography>{props.username}</Typography>\n                </Box>\n                <Box>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                  >\n                    <AccountCircle />\n                  </IconButton>\n                  <Menu\n                    id=\"menu-appbar\"\n                    style={{\n                      marginTop: \"40px\"\n                    }}\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    open={open}\n                    onClose={handleClose}\n                  >\n                  <Avatar style={{margin: \"auto\"}}>{props.username[0].toUpperCase()}</Avatar>\n                  <ListSubheader component=\"div\" style={{lineHeight: \"30px\", margin: \"15px 10px\"}}>\n                      @{props.username}<br></br>\n                      {props.name}\n                  </ListSubheader>\n                  <Divider style={{marginBottom: \"8px\"}} />\n                    <MenuItem onClick={handleClose}>Ayarlar</MenuItem>\n                    <MenuItem onClick={props.handleLogout}>Çıkış Yap</MenuItem>\n                  </Menu>  \n                </Box>\n              </Box>\n            :\n            <Box style={rightMenuStyle}></Box>\n            }\n              \n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB_wV3rvJbx--kdqCVNX2m9yHi297uaz7o\",\n    authDomain: \"kampustekal-32a9c.firebaseapp.com\",\n    databaseURL: \"https://kampustekal-32a9c-default-rtdb.firebaseio.com\",\n    projectId: \"kampustekal-32a9c\",\n    storageBucket: \"kampustekal-32a9c.appspot.com\",\n    messagingSenderId: \"851078311705\",\n    appId: \"1:851078311705:web:993d22eab0834f1e0c5f88\",\n    measurementId: \"G-ZXSWR6VY5S\"\n}\n\nfirebase.initializeApp(firebaseConfig)\nexport const auth = firebase.auth\nexport const db = firebase.database()","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport MuiAlert from '@material-ui/lab/Alert'\n\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\n\nimport HomePageHeader from '../HomePage/components/HomePageHeader'\n\nimport { signup } from '../../helpers/auth'\nimport { db } from '../../services/firebase'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n}\n\nfunction CustomSnackbar(props) {\n    /* Snackbar component to use for sign in feedback to the user. */\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n        props.closeSnackbar()\n    }\n\n    return (\n        <Snackbar open={props.show} autoHideDuration={10000} onClose={handleClose}>\n            <Alert severity={props.severity} onClose={handleClose}>\n                {props.message}\n            </Alert>\n        </Snackbar>\n    )\n}\n\nfunction CustomTextField(props) {\n    /* (Slightly) customized text field component for reusability. */\n    // Warning messages we'll use for errors\n    const helperTexts = {\n        \"firstName\": \"Bu alan zorunludur.\",\n        \"lastName\": \"Bu alan zorunludur.\",\n        \"username\": \"Bu alan zorunludur.\",\n        \"email\": \"Lütfen geçerli bir e-mail adresi girin.\",\n        \"password\": \"Şifre en az 6 karakterden oluşmalıdır.\",\n    }\n\n    // Regular view\n    if (!props.error) {\n        return (\n            <Grid item xs={12} sm={props.small ? 6 : undefined}>\n                <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    id={props.id}\n                    label={props.label}\n                    name={props.name}\n                    type={props.password ? \"password\" : undefined}\n                    autoComplete={props.autoComplete}\n                    onChange={e => props.onChange(e.target.value)}\n                />\n            </Grid>\n            )\n    }\n    // Error view\n    else {\n        return (\n            <Grid item xs={12} sm={props.small ? 6 : undefined}>\n                <TextField\n                    error\n                    helperText={helperTexts[props.name]}\n                    variant=\"outlined\"\n                    fullWidth\n                    id={props.id}\n                    label={props.label}\n                    name={props.name}\n                    type={props.password ? \"password\" : undefined}\n                    autoComplete={props.autoComplete}\n                    onChange={e => props.onChange(e.target.value)}\n                />\n            </Grid>\n            )\n    }\n}\n\nfunction CustomAutocomplete(props) {\n    /* University input field. */\n    if (!props.error) {\n        return (\n            <Grid item xs={12}>\n                <Autocomplete \n                    options={props.universities}\n                    renderInput={(params) => <TextField {...params} variant=\"outlined\" label=\"Üniversite\" />}\n                    onChange={(event,university) => props.setUniversity(university)}\n                />\n            </Grid>\n        )\n    }\n    else {\n        return (\n            <Grid item xs={12}>\n                <Autocomplete\n                    options={props.universities}\n                    renderInput={(params) => <TextField error helperText=\"Lütfen bir üniversite seçin.\" {...params} variant=\"outlined\" label=\"Üniversite\" />}\n                    onChange={(event,university) => props.setUniversity(university)}\n                />\n            </Grid>\n        )\n    }\n}\n\nconst useStyles = (theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    textTransform: \"none\",\n    fontSize: \"18px\"\n  },\n})\n\nclass RegisterPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            name: '', \n            surname: '', \n            username: '', \n            email: '', \n            university: '',\n            formControl: false, // Checkbox at the end \n            errors: {\n                'name' : false,\n                'surname' : false,\n                'email' : false,\n                'password' : false,\n                'username' : false,\n                'university' : false,\n                'formControl' : false,\n            },\n            statusMessage: '',\n            statusSeverity: null,\n            snackbarOpen: false,\n            submissionInProgress: false\n        }\n\n        this.universities = ['Boğaziçi Üniversitesi', 'Koç Üniversitesi', 'Bilgi Üniversitesi']\n\n        // Bind functions to component\n        this.checkRemoveError = this.checkRemoveError.bind(this)\n\n        this.closeSnackbar = this.closeSnackbar.bind(this)\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.setName = this.setName.bind(this)\n        this.setSurname = this.setSurname.bind(this)\n        this.setEmail = this.setEmail.bind(this)\n        this.setUsername = this.setUsername.bind(this)\n        this.setPassword = this.setPassword.bind(this)\n        this.setUniversity = this.setUniversity.bind(this)\n\n        this.validateName = this.validateName.bind(this)\n        this.validateSurname = this.validateSurname.bind(this)\n        this.validateUsername = this.validateUsername.bind(this)\n        this.validatePassword = this.validatePassword.bind(this)\n        this.validateEmail = this.validateEmail.bind(this)\n        this.validateUniversity = this.validateUniversity.bind(this)\n        this.validateFormControl = this.validateFormControl.bind(this)\n        this.validateInputs = this.validateInputs.bind(this)\n    }\n\n    closeSnackbar() {\n        this.setState({snackbarOpen: false})\n    }\n\n    checkRemoveError(field, nowValid) {\n        if (this.state.errors[field] && nowValid) {\n            const currentErrors = this.state.errors\n            currentErrors[field] = false\n            this.setState({errors: currentErrors})\n        }\n    }\n\n    // ======================\n    // Setter functions\n    // ======================\n    setName(val) {\n        this.setState({name: val})\n        this.checkRemoveError(\"name\", val !== '')\n    }\n    setSurname(val) {\n        this.setState({surname: val})\n        this.checkRemoveError(\"surname\", val !== '')\n    }\n    setEmail(val) {\n        this.setState({email: val})\n        const nowValid = val.endsWith('edu.tr') && val.includes('@')\n        this.checkRemoveError(\"email\", nowValid)\n    }\n    setUsername(val) {\n        this.setState({username: val})\n        this.checkRemoveError(\"username\", val !== '')\n    }\n    setPassword(val) {\n        this.setState({password: val})\n        const nowValid = val.length >= 6\n        this.checkRemoveError(\"password\", nowValid)\n    }\n    setUniversity(val) {\n        this.setState({university: val})\n        const nowValid = this.universities.includes(val)\n        this.checkRemoveError(\"university\", nowValid)\n    }\n\n    // ======================\n    // Input validator functions\n    // ======================\n    validateName() {\n        const valid = this.state.name.trim() !== ''\n        if (!valid) {\n            this.setState({errors: {...this.state.errors, 'name' : true}})\n        }\n        return valid\n    }\n    validateSurname() {\n        const valid = this.state.surname.trim() !== ''\n        if (!valid) {\n            this.setState({errors: {...this.state.errors, 'surname' : true}})\n        }\n        return valid\n    }\n    validateUsername() {\n        const valid = this.state.username.trim() !== ''\n        if (!valid) {\n            this.setState({errors: {...this.state.errors, 'username' : true}})\n        }\n        return valid\n    }\n    validateEmail() {\n        // Valid e-mail format: Ends with .edu.tr\n        const valid = this.state.email ? this.state.email.endsWith('edu.tr') && this.state.email.includes('@') : false\n        if (!valid) {\n            this.setState({errors: {...this.state.errors, 'email' : true}})\n        }\n        return valid\n    }\n    validatePassword() {\n        const valid = this.state.password ? this.state.password.length >= 6 : false\n        if (!valid) {\n            this.setState({errors: {...this.state.errors, 'password': true}})\n        }\n        return valid\n    }\n    validateUniversity() {\n        const valid = this.universities.includes(this.state.university)\n        if (!valid) {\n            this.setState({errors: {...this.state.errors, 'university': true}})\n        }\n        return valid\n    }\n\n    validateFormControl() {\n        const valid = this.state.formControl\n        if (!valid) {\n            this.setState({errors: {...this.state.errors, 'formControl' : true}})\n        }\n        return valid\n    }\n\n    validateInputs(funcs) {\n        /* Validate all inputs before proceeding to submission. */\n        for (let idx=0; idx < funcs.length; idx++) {\n            let fieldIsValid = funcs[idx]()\n            if (!fieldIsValid) {\n                // If one of the fields is invalid, do not continue to the rest\n                return false\n            }\n        }\n        return true\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n        \n        // Validate input data\n        const validationFuncs = [\n            this.validateName,\n            this.validateSurname,\n            this.validateEmail,\n            this.validateUsername,\n            this.validatePassword,\n            this.validateUniversity,\n            this.validateFormControl,\n        ]\n\n        const allFieldsValid = this.validateInputs(validationFuncs)\n        // If all fields are not valid, do not proceed to submission\n        if (!allFieldsValid) {\n            return\n        }\n\n        // Submission\n        this.setState({submissionInProgress: true})\n\n        // State update once the submission is done\n        const stateUpdate = {snackbarOpen: true, submissionInProgress: false}\n\n        // First, check if a username already exists (can be optimized later)\n        let validusername = true\n        db.ref('users').get().then(snapshot => {\n            snapshot.forEach(data => {\n                if (data.val()['username'] === this.state.username) {\n                    let statusMessage = `Maalesef ${this.state.username} alınmış, başka bir kullanıcı ismi dene!`    \n                    this.setState({statusMessage: statusMessage, statusSeverity: \"warning\", ...stateUpdate})\n                    validusername = false\n                }\n            })\n        })\n\n        if (!validusername) {\n            return\n        }\n\n        db.ref(`/users/${this.state.username}`).set({\n            name       : `${this.state.name} ${this.state.surname}`,\n            email      : this.state.email,\n            username   : this.state.username,\n            password   : this.state.password,\n            university : this.state.university,\n            contacts   : {'_init': true},\n            chats      : {'_init': true}\n        }, (error) => {\n            if (error) {\n                let statusMessage = 'Bir sunucu hatası oldu!'\n                this.setState({statusMessage: statusMessage, statusSeverity: \"error\", ...stateUpdate})\n            }\n            else {\n                let statusMessage = `Hesabın oluşturuldu ${this.state.username}! Giriş yapmak için buraya tıkla.`\n                this.setState({statusMessage: statusMessage, statusSeverity: \"success\", ...stateUpdate})\n            }\n        })\n\n        // const ENDPOINT = '/api/users'\n\n        // const body = {\n        //     name       : `${this.state.name} ${this.state.surname}`,\n        //     email      : this.state.email,\n        //     username   : this.state.username,\n        //     password   : this.state.password,\n        //     university : this.state.university,\n        // }\n\n        // fetch(ENDPOINT, {\n        //     method: 'POST',\n        //     body: JSON.stringify(body),\n        //     headers: {\n        //         'Content-Type' : 'application/json',\n        //         'Accept' : 'appplication/json'\n        //     }\n        // })\n        // .then(async response => {\n        //     // The status message we'll display to the user\n        //     let statusMessage\n        //     const stateUpdate = {snackbarOpen: true, submissionInProgress: false}\n        //     if (response.status === 201) {\n        //         const jsonResponse = await response.json();\n        //         statusMessage = `Hesabın oluşturuldu ${jsonResponse.username}! Giriş yapmak için buraya tıkla.`\n        //         this.setState({statusMessage: statusMessage, statusSeverity: \"success\", ...stateUpdate})\n        //     }\n        //     else if (response.status === 400) {\n        //         statusMessage = `Maalesef ${body.username} alınmış, başka bir kullanıcı ismi dene!`\n        //         this.setState({statusMessage: statusMessage, statusSeverity: \"warning\", ...stateUpdate})\n        //     }\n        //     else {\n        //         statusMessage = 'Bir sunucu hatası oldu!'\n        //         this.setState({statusMessage: statusMessage, statusSeverity: \"error\", ...stateUpdate})\n        //     }    \n        // })\n    }\n\n    render() {\n        const { classes } = this.props\n        return (\n            <div>\n                <HomePageHeader />\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Kaydol\n                        </Typography>\n                        <form className={classes.form} noValidate onSubmit={this.onSubmit}>\n                        <Grid container spacing={2}>\n                            <CustomTextField error={this.state.errors.name} small id=\"firstName\" label=\"İsim\" name=\"firstName\" onChange={this.setName} />\n                            <CustomTextField error={this.state.errors.surname} small id=\"lastName\" label=\"Soyisim\" name=\"lastName\" onChange={this.setSurname} />\n                            <CustomTextField error={this.state.errors.email} id=\"email\" label=\"xxx@xxx.edu.tr\" name=\"email\" autoComplete=\"email\" onChange={this.setEmail} />\n                            <CustomTextField error={this.state.errors.username} id=\"username\" label=\"Kullanıcı adı\" name=\"username\" autoComplete=\"username\" onChange={this.setUsername} />\n                            <CustomTextField error={this.state.errors.password} password id=\"password\" label=\"Şifre\" name=\"password\" autoComplete=\"current-password\" onChange={this.setPassword} />\n                            \n                            <CustomAutocomplete error={this.state.errors.university} universities={this.universities} setUniversity={this.setUniversity} />\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox required color=\"primary\" />}\n                                    label=\"Kullanıcı sözleşmesini okudum ve kabul ediyorum.\"\n                                    onChange={e => this.setState({...this.state, formControl: !(this.state.formControl)})}\n                                />\n                                {this.state.errors.formControl ? <Typography style={{color: \"red\"}}>{\"Lütfen bu alanı işaretleyin.\"}</Typography> : <div></div>}\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            {this.state.submissionInProgress ? <CircularProgress color=\"inherit\" size={30} /> : \"Kaydol\"}\n                        </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                            <Link href=\"/login\" variant=\"body2\">\n                                Zaten bir hesabın var mı? Giriş yap\n                            </Link>\n                            </Grid>\n                        </Grid>\n                        </form>\n                    </div>\n                    <Box mt={5}>\n                        <Copyright />\n                    </Box>\n                    <CustomSnackbar show={this.state.snackbarOpen} \n                                    message={this.state.statusMessage} \n                                    severity={this.state.statusSeverity} \n                                    closeSnackbar={this.closeSnackbar} \n                                    />\n                </Container>\n            </div>\n            \n          );\n    }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(RegisterPage)","import React from 'react'\nimport {Redirect} from 'react-router-dom'\nimport HomePageHeader from '../HomePage/components/HomePageHeader'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { TextField } from '@material-ui/core'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { db } from '../../services/firebase'\n\nconst useStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        margin: theme.spacing(3,0,2),\n        textTransform: \"none\",\n        fontSize: \"18px\"\n    },\n})\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            loginStatus: null,\n            loginAttempt: false\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    setUsername(username) {\n        this.setState({username: username})\n    }\n\n    setPassword(password) {\n        this.setState({password: password})\n    }\n\n    saveTokenToLocalStorage(token) {\n        /* To be used when user checks the \"remember me\" box */\n        localStorage.setItem('token', JSON.stringify(token))\n    }\n\n    async loginUser(credentials) {\n        return fetch('/api/login', {\n            method: 'POST',\n            body: JSON.stringify(credentials),\n            headers: {\n                'Content-Type' : 'application/json'\n            }\n        })\n        .then(response => response.json())\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        this.setState({loginAttempt: true})\n\n        ////////////////\n        //// TEST //////\n        ////////////////\n        let validLogin = false\n        await db.ref(`users/${this.state.username}`).once('value').then(snapshot => {\n            if (snapshot.exists()) {\n                const snapshotVal = snapshot.val()\n                const username = snapshotVal.username\n                const password = snapshotVal.password\n                if ((username === this.state.username) && (password === this.state.password)) {\n                    validLogin = true\n                }\n        }\n    })\n\n    if (!validLogin) {\n        this.setState({loginStatus: 'failed'})\n    }\n    else {\n        const userToken = {\n            token: Math.random().toString(32).substring(7),\n            username: this.state.username\n        }\n        this.props.setToken(userToken)\n        // Reload the page with the token saved, so that we get redirected to the home page of the user\n        window.location.reload()\n    }\n    this.setState({loginAttempt: false})\n\n\n        ////////////////\n\n    //     const response = await this.loginUser({\n    //         username: this.state.username,\n    //         password: this.state.password\n    //     });\n    //     if (response.message === 'logged-in') {\n    //         const userToken = {\n    //             token: response.token,\n    //             username: response.username\n    //         } \n    //         this.props.setToken(userToken)\n    //         // If \"remember me\" box is checked, save the token into the local storage as well so that it will be kept there\n    //         if (this.state.saveToLocalStorage) {\n    //             this.saveTokenToLocalStorage(userToken)\n    //         }\n\n    //         // Reload page so that we get redirected\n    //         window.location.reload()\n    //     }\n    //     else {\n    //         this.setState({loginStatus: 'failed'});\n    //     }\n    //     this.setState({loginAttempt: false})\n    }\n\n    render() {\n        const { classes } = this.props\n        if (this.props.getToken()) {\n            return <Redirect to=\"/home\" />\n        }\n        return (\n            <div>\n                <HomePageHeader />\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon></LockOutlinedIcon>\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Giriş Yap\n                        </Typography>\n                    </div>\n                    <form className={classes.form} onSubmit={this.handleSubmit} noValidate>\n                        {/* Display error message in case of failed login */}\n                        {this.state.loginStatus !== 'failed' ? (\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"username\"\n                            label=\"Kullanıcı Adı\"\n                            name=\"username\"\n                            autoFocus\n                            onChange={e => this.setUsername(e.target.value)}\n                        /> ) : (\n                            <TextField\n                            error\n                            variant=\"outlined\"\n                            helperText=\"Kullanıcı adı veya şifre yanlış. Lütfen tekrar deneyin.\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"username\"\n                            label=\"Kullanıcı Adı\"\n                            name=\"username\"\n                            autoFocus\n                            onChange={e => this.setUsername(e.target.value)}\n                        /> \n\n                        )}\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            name=\"password\"\n                            label=\"Şifre\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={e => this.setPassword(e.target.value)}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Beni hatırla\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            {this.state.loginAttempt ? <CircularProgress color=\"inherit\" size={30} /> : \"Giriş Yap\" }\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Şifreni mi unuttun?\n                            </Link>\n                            </Grid>\n                            <Grid item>\n                            <Link href=\"/register\" variant=\"body2\">\n                                {\"Hesabın yok mu? Kaydol\"}\n                            </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Container>\n            </div>\n        )\n    }\n    \n}\n\nexport default withStyles(useStyles)(LoginPage)","import React from 'react';\nimport './AdminPage.css';\nimport { NavLink, Redirect } from 'react-router-dom';\n\nclass AdminPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {loading: true};\n    }\n\n    componentDidMount() {\n        fetch('/api/users', {\n            method: 'GET',\n        })\n        .then(response => response.json())\n        .then(json => {\n            this.setState({\n                loading: false,\n                data: json\n            })\n        });\n    }\n\n    handleDelete(e) {\n        e.preventDefault();\n        const username = e.target.id;\n        fetch(`/api/users/${username}`, {\n            method: 'DELETE',\n        })\n        .then(response => {\n            window.location.reload()\n        });\n    }\n\n    handleLogout(e) {\n        e.preventDefault();\n        sessionStorage.removeItem('token');\n        window.location.reload();\n    }\n\n    renderList(userlist) {\n        return (\n            <ul>\n                {userlist.map(item => (\n                    <div className=\"user-block\">\n                        <li className=\"user-item\" key={item._id}>\n                            Kullanici: {item.username}\n                        </li>\n                        <button onClick={this.handleDelete} id={item.username} className=\"delete-user-button\" type=\"submit\">Kullaniciyi Sil</button>\n                    </div>\n                ))}\n            </ul>\n        )\n    }\n    \n    render() {\n        // Login needed first\n        if (!this.props.getToken()) {\n            return <Redirect to=\"/login\" />\n        }\n    \n        return (\n            <div className=\"admin-container\">\n                <h1 className=\"admin-header\">Kullanici Listesi:</h1>\n                {this.state.loading ? \"Wait\" : this.renderList(this.state.data)}\n                <div className=\"back-to-home-admin\">\n                    <p>Ana sayfaya donmek icin <NavLink to=\"/\" className=\"back-to-home-button\">buraya</NavLink> tikla!</p>\n                </div>\n                <div className=\"logout-admin\">\n                    <button className=\"logout-button-admin\" onClick={this.handleLogout}>Cikis Yap</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AdminPage;","import React from 'react'\nimport './RightSidebar.css'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListSubheader from '@material-ui/core/ListSubheader'\n\nclass UserMenu extends React.Component {\n    render() {\n        function isUppercase(s) {\n            return s === s.toUpperCase()\n        }\n\n        let username\n        \n        if (this.props.anchorForMenu) {\n            username = this.props.anchorForMenu.textContent\n            // Some pre-processing here...\n            if ((username.length > 1) && (isUppercase(username[0]))) {\n                username = username.slice(1)\n            }\n            else if (username.length === 1) {\n                username = ''\n            }\n        }\n        return (\n            <div>\n                <Menu\n                    anchorEl={this.props.anchorForMenu}\n                    keepMounted\n                    open={Boolean(this.props.anchorForMenu)}\n                    onClose={this.props.handleClose}\n                >\n                    <ListSubheader component=\"div\">{this.props.anchorForMenu ? '@' + username : ''}</ListSubheader>\n                    <MenuItem onClick={this.props.handleClose}>Direkt mesaj yolla</MenuItem>\n                    <MenuItem onClick={this.props.handleClose}>Kullanıcıyı ekle</MenuItem>\n                </Menu>\n            </div>\n        )\n    }\n}\n\nclass RightSidebar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            anchorForMenu: null\n        }\n        this.renderContacts = this.renderContacts.bind(this)\n        this.renderUserMenu = this.renderUserMenu.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    renderUserMenu(e) {\n        this.setState({\n            anchorForMenu: e.target\n        })\n    }\n    \n    handleClose() {\n        this.setState({\n            anchorForMenu: null\n        })\n    }\n\n    renderContacts() {\n        return this.props.contacts.map(contact => {\n            const username = contact.username\n            return (\n                <List>\n                    <ListItem button onClick={username !== this.props.username ? this.renderUserMenu : null}>\n                        <ListItemIcon>\n                            <Avatar>{username[0].toUpperCase()}</Avatar>\n                        </ListItemIcon>\n                        <ListItemText primary={username}/>\n                    </ListItem>\n                    <UserMenu anchorForMenu={this.state.anchorForMenu} handleClose={this.handleClose} />\n                </List>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"right-sidebar-container\">\n                <div className=\"right-sidebar-header-container\">\n                    <h2 className=\"right-sidebar-header\">Kullanıcılar</h2>\n                </div>\n                <div className=\"right-sidebar-contact-list\">{this.renderContacts()}</div>\n            </div>\n        )\n    }\n}\n\nexport default RightSidebar","import React from 'react';\nimport './ChatRoom.css';\nimport './RightSidebar.css';\nimport { io } from 'socket.io-client';\n// import { MessageBox } from 'react-chat-elements';\nimport RightSidebar from './RightSidebar'\n\nimport { db } from '../../../services/firebase'\nimport firebase from 'firebase'\n\nconst NEW_CHAT_MESSAGE_EVENT = 'new_chat_message';\nconst USER_LEFT_EVENT = 'user_left';\nconst USER_TYPING_EVENT = 'user_typing';\nconst USER_STOPPED_TYPING_EVENT = 'user_stopped_typing';\n// const SOCKET_SERVER_URL = 'http://localhost:8080';\n\nclass ChatRoom extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            roomId: this.props.roomId,\n            messagelist: [],\n            current_message: '',\n            userTypingMsg: '',\n            userJoinedOrLeftMsg: '',\n            // socket: io(SOCKET_SERVER_URL),\n        }\n\n        // Send username, user ID (socket ID) and room ID\n        // this.state.socket.emit('new_connection', this.props.username, this.state.socket.id, this.props.roomId)\n\n        this.handleNewMessageChange = this.handleNewMessageChange.bind(this);\n        this.handleSendMessage = this.handleSendMessage.bind(this);\n        this.handleExit = this.handleExit.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.scrollToBottom = this.scrollToBottom.bind(this);\n    }\n\n    scrollToBottom() {\n        // Automatically scroll to the bottom of the message list\n        this.messagesEnd.scrollIntoView()\n    }\n\n    componentDidUpdate(prevProps) {\n        this.scrollToBottom()\n        const newRoomId = this.props.roomId;\n        if (prevProps.roomId !== newRoomId)  {\n            // Load the messages from the database\n            db.ref(`messages/${this.props.roomId}`).orderByChild('timestamp').on('value', (snapshot) => {\n            if (snapshot.exists()) {\n                const data = snapshot.val()\n                const messagelist = Object.values(data)\n                this.setState({messagelist: messagelist})\n            }\n            else {\n                this.setState({messagelist: []})\n            }\n        })\n        }\n    }\n\n    async componentDidMount() {\n        this.scrollToBottom()\n\n        // Load the messages from the database\n        db.ref(`messages/${this.props.roomId}`).orderByChild('timestamp').on('value', (snapshot) => {\n            if (snapshot.exists()) {\n                const data = snapshot.val()\n                const messagelist = Object.values(data)\n                this.setState({messagelist: messagelist})\n            }\n        })\n\n        // Listen for \"user typing\" events\n        db.ref(`rooms/${this.props.roomId}`).on('child_changed', (snapshot) => {\n            const data = snapshot.val()\n            // Get the typing users\n            const users = Object.keys(data)\n            const typingUsers = users.filter(user => data[user]).filter(user => user !== this.props.username)\n            let userTypingMsg\n            if (typingUsers.length === 1) {\n                userTypingMsg = `${typingUsers[0]} yazıyor...`\n            }\n            else if (typingUsers.length > 1) {\n                userTypingMsg = `${typingUsers.join(', ')} yazıyor...`\n            }\n            this.setState({\n                userTypingMsg: userTypingMsg\n            })\n        })\n    }\n\n    handleNewMessageChange(e) {\n        e.preventDefault();\n        this.setState({current_message: e.target.value});\n\n        const dbpath = `rooms/${this.props.roomId}/typingIndicator/${this.props.username}`\n\n        let userTyping = true\n        if (e.target.value === '') {\n            userTyping = false\n        }\n        \n        const updates = {\n            [dbpath] : userTyping\n        }\n        \n        db.ref().update(updates)\n    }\n\n    handleSendMessage(e) {\n        e.preventDefault();\n        // Emit chat message to server (only non-empty messages)\n        if (this.state.current_message === '') {\n            return\n        }\n\n        const messageData = {\n            text: this.state.current_message,\n            sender: this.props.username,\n            timestamp: firebase.database.ServerValue.TIMESTAMP\n        }\n\n        db.ref(`messages/${this.props.roomId}`).push().set(messageData)\n\n        // \"User stopped typing\" event\n        const dbpath = `rooms/${this.props.roomId}/typingIndicator/${this.props.username}`\n\n        const updates = {\n            [dbpath] : false\n        }\n        \n        db.ref().update(updates)\n\n        // Clear the text field\n        this.setState({current_message: \"\"})\n    }\n\n    handleExit(e) {\n        this.state.socket.emit(USER_LEFT_EVENT, {\n            userId: this.state.socket.id,\n            username: this.props.username\n        });\n    }\n\n    onKeyDown(e) {\n        // If user hits enter, submit message\n        // Otherwise do nothing\n        if (e.keyCode === 13) {\n            e.preventDefault();\n            this.handleSendMessage(e);\n        }\n        else {\n            return\n        }\n    }\n\n    renderMessages() {\n        /* Helper function to render the message list from the state of the component. */\n        return this.state.messagelist.map((message, i) => {\n            // This one is only for \"user joined\" or \"user left\" messages\n            if (message?.type === 'user-notification') {\n                return (\n                    <div className=\"user-joined-left-msg\">\n                        <p><i>{message.body}</i></p>\n                    </div>\n                )\n            }\n            // This one is for all other normal messages\n            else {\n                return (\n                    <div className={`single-message-container ${\n                        message.sender === this.props.username ? \"my-message\" : \"received-message\" \n                    }`}>\n                        <li\n                            key={i}\n                            className={`message-item ${\n                                message.sender === this.props.username ? \"my-message\" : \"received-message\" \n                            }`}\n                        >\n                            {message.text}\n                        </li>\n                        <span className=\"username-stamp\">{message.sender}, {new Date(message.timestamp).toString().split(' ').slice(4,5).join(' ')}</span>\n                    </div>\n                    )}\n                }\n            )\n    }\n\n    render() {\n        return (\n            <div className=\"chat-room-container\">\n                {/* Chat section in the middle */}\n                <div className=\"chat-section-container\" style={this.state.roomId.startsWith(\"c-room\") ? {flex: \"0 0 75%\"} : {flex: \"0 0 100%\"}}>\n                    <div className=\"messages-container\">\n                        <ol className=\"messages-list\">\n                            {this.renderMessages()}\n                        </ol>\n                        <div ref={el => this.messagesEnd = el}>\n                        </div>\n                        <div className=\"user-typing-msg\">\n                            <p><i>{this.state.userTypingMsg}</i></p>\n                        </div>\n                        <div className=\"user-joined-left-msg\">\n                            <p><i>{this.state.userJoinedOrLeftMsg}</i></p>\n                        </div>\n                    </div>\n                    <textarea\n                        value={this.state.current_message}\n                        onChange={this.handleNewMessageChange}\n                        placeholder=\"Write message...\"\n                        className=\"new-message-input-field\"\n                        onKeyDown={this.onKeyDown}\n                        />\n                </div>\n                {/* Sidebar on the right hand side of the page */}\n                <div className=\"sidebar-right-container\">\n                    {(this.state.contacts && this.state.roomId.startsWith(\"c-room\")) ? \n                                <RightSidebar contacts={this.state.contacts} username={this.props.username} /> \n                                : <div></div>}\n                </div>\n            </div>\n        )\n    }\n}\n    \nexport default ChatRoom;","import React from 'react'\n\nimport './NewChatGroupDialog.css'\n\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormHelperText from '@material-ui/core/FormHelperText'\n\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Avatar from '@material-ui/core/Avatar'\nimport Divider from '@material-ui/core/Divider'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\n\nimport LaptopChromebookIcon from '@material-ui/icons/LaptopChromebook'\nimport GroupIcon from '@material-ui/icons/Group'\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer'\nimport EventIcon from '@material-ui/icons/Event'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport AddIcon from '@material-ui/icons/Add'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { db } from '../../../services/firebase'\n\nclass RoomTheme extends React.Component {\n    /* Re-usable room theme for different room types. */\n    render() {\n        return (\n            <div>\n                <ListItem>\n                    <ListItemIcon>\n                        {this.props.icon}\n                    </ListItemIcon>\n                    <ListItemText><strong>{this.props.label}:</strong> {this.props.desc}</ListItemText>\n                </ListItem>\n            </div>\n        )\n    }\n}\n\nclass ContactTheme extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            added: false\n        }\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick() {\n        const newContact = this.props.contact\n        const contactData = {\n            username: newContact.username,\n            _id: newContact._id\n        }\n        // Add (or remove) the contact in the parent component's state\n        if (!this.state.added) {\n            this.props.addContact(contactData)\n        }\n        else {\n            this.props.removeContact(contactData)\n        }\n        // Set this component's state\n        this.setState({\n            added: !(this.state.added)\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <ListItem>\n                    <ListItemIcon>\n                        <Avatar>{this.props.contact.username[0].toUpperCase()}</Avatar>\n                    </ListItemIcon>\n                    <ListItemText>\n                        {this.props.contact.username}\n                    </ListItemText>\n                    <IconButton onClick={this.handleClick}>\n                        {this.state.added ? <CheckCircleIcon /> : <AddIcon />}\n                    </IconButton>\n                    <Divider />\n                </ListItem>\n            </div>\n        )\n    }\n}\n\nclass RoomThemeStep extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeRadioButtonName: \"Kulüp\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(e) {\n        this.setState({\n            activeRadioButtonName: e.target.value\n        })\n        // Set the state of the parent component\n        this.props.setGroupType(e.target.value)\n\n        // If this is an enter keypress, move on to the next step\n        // after setting the value\n        if (e.charCode === 13) {\n            this.props.handleNext()\n        }\n    }\n\n    getRoomLabelElement(roomtheme) {\n        const mapping = {\n            \"Kulüp\" : {\n                icon: <GroupIcon></GroupIcon>,\n                label: \"Kulüp\",\n                desc: \"Kulüp organizasyonları için bir oda.\"\n            },\n            \"Ders\" : {\n                icon: <LaptopChromebookIcon></LaptopChromebookIcon>,\n                label: \"Ders\",\n                desc: \"Dersle ilgili paylaşımlar için bir oda.\"\n            },\n            \"Spor\" : {\n                icon: <SportsSoccerIcon></SportsSoccerIcon>,\n                label: \"Spor\",\n                desc: \"Spor ile ilgili muhabbetler için bir oda.\"\n            },\n            \"Gündem\" : {\n                icon: <EventIcon></EventIcon>,\n                label: \"Gündem\",\n                desc: \"En yeni gelişmelerin tartışıldığı oda.\"\n            },\n        }\n        const theme = mapping[roomtheme]\n        return <RoomTheme label={theme.label} icon={theme.icon} desc={theme.desc} />\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Grubuna bir tema bulalım</h2>\n                <p>Grubun için aşağıdaki hazır temalardan birini seçebilirsin:</p>\n                <RadioGroup id=\"group-type-selection\" aria-label=\"Grup tipi\" value={this.state.activeRadioButtonName} onKeyPress={this.handleChange} onChange={this.handleChange}>\n                    <FormControlLabel value=\"Kulüp\" control={<Radio />} label={this.getRoomLabelElement(\"Kulüp\")} />\n                    <FormControlLabel value=\"Ders\" control={<Radio />} label={this.getRoomLabelElement(\"Ders\")} />\n                    <h3>Sosyal gruplar</h3>\n                    <FormControlLabel value=\"Spor\" control={<Radio />} label={this.getRoomLabelElement(\"Spor\")}/> \n                    <FormControlLabel value=\"Gündem\" control={<Radio />} label={this.getRoomLabelElement(\"Gündem\")}/> \n                </RadioGroup>\n                <br></br>\n            </div>\n        )\n    }\n}\n\nclass RoomNameStep extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            groupName: \"\",\n            error: false\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSemester = this.handleSemester.bind(this)\n    }\n\n    handleChange(e) {\n        this.setState({\n            ...this.state,\n            groupName: e.target.value\n        })\n        // Update the state of parent component\n        this.props.setGroupName(e.target.value)\n        // If this is an enter keypress, move on to the next step\n        // after setting the value\n        if (e.charCode === 13) {\n            this.props.handleNext()\n        }\n    }\n\n    handleSemester(e) {\n        this.props.setClassSemester(e.target.value)\n    }\n\n    render() {\n        return (\n            <div style={{marginBottom: \"20px\"}}>\n                <h2>Şimdi grubuna bir isim bulalım</h2>\n                <p>Grubunun ismini aşağıya yazabilirsin:</p>\n                <Grid container spacing={6}>\n                    <Grid item>\n                    {this.props.err ? <TextField \n                                            error\n                                            helperText=\"Lütfen bir grup ismi girin.\"\n                                            label=\"Grup ismi\" \n                                            autoComplete=\"off\" \n                                            id=\"group-name-text-field\" \n                                            value={this.props.currentGroupname} \n                                            onChange={this.handleChange}\n                                            onKeyPress={this.handleChange} /> : <TextField label=\"Grup ismi\" \n                                                                                        autoComplete=\"off\" \n                                                                                        id=\"group-name-text-field\" \n                                                                                        value={this.props.currentGroupname} \n                                                                                        onChange={this.handleChange}\n                                                                                        onKeyPress={this.handleChange} /> }\n                        \n                    </Grid>\n                    {this.props.groupType === \"Ders\" ? (\n                        <Grid item>\n                            <Select value={this.props.classSemester} style={{marginTop: \"18px\", width: \"150px\"}} defaultValue=\"Fall-21\" onChange={this.handleSemester}>\n                                <MenuItem value={\"Fall-21\"}>Fall '21</MenuItem>\n                                <MenuItem value={\"Spring-22\"}>Spring '22</MenuItem>\n                            </Select>\n                            <FormHelperText>Bu alan dersin hangi dönem için olduğunu belirtir.</FormHelperText>\n                        </Grid>\n                    ) : (\n                        <div></div>\n                    )}\n                <br></br>\n                </Grid>\n                <br></br>\n                {/* University field for student-club/class related rooms */}\n                {[\"Ders\", \"Kulüp\"].includes(this.props.groupType) ? (\n                    <TextField label=\"Üniversite\" helperText=\"Bu odaya sadece bu üniversiteden bağlantılar katılabilir.\" autoComplete=\"off\" id=\"group-name-text-field\" disabled value={this.props.universityOfUser} />\n                ): (\n                    <div></div>\n                )}\n                \n            </div>\n        )\n    }\n}\n\nclass ContactsStep extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            addedContacts: []\n        }\n        this.addContact = this.addContact.bind(this)\n        this.removeContact = this.removeContact.bind(this)\n    }\n\n    addContact(newContact) {\n        let contacts = this.state.addedContacts\n        contacts.push(newContact)\n        this.setState({\n            addedContacts: contacts\n        })\n        // Set contact list of the parent\n        this.props.setContactList(contacts)\n    }\n\n    removeContact(contact) {\n        let contacts = this.state.addedContacts\n        // Find the index of the contact to be removed\n        const indexToRemove = contacts.indexOf(contact)\n        contacts.splice(indexToRemove)\n        this.setState({\n            addedContacts: contacts\n        })\n        // Set contact list of the parent\n        this.props.setContactList(contacts)\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Grubuna arkadaşlarını ekle</h2>\n                <p>Grubuna aşağıdaki bağlantılarını seçerek ekleyebilirsin:</p>\n                <List onKeyPress={this.props.handleNext}>\n                    {this.props.contacts.map(contact => {\n                        return (\n                            <ContactTheme contact={contact} addContact={this.addContact} removeContact={this.removeContact} />\n                        )\n                    })}\n                </List>\n            </div>\n        )\n    }\n}\n\nclass LoadingStep extends React.Component {\n    render() {\n        return (\n            <Box>\n                <Typography variant=\"h6\">Grubun oluşturuluyor...</Typography>\n                <CircularProgress style={{margin: \"20px 0\"}} />\n            </Box>\n        )\n    }\n}\n\nclass NewChatGroupFormStepper extends React.Component {\n    getStepContent(step) {\n        switch(step) {\n            case 0:\n                return <RoomThemeStep setGroupType={this.props.setGroupType} handleNext={this.props.handleNext} />\n            case 1:\n                return <RoomNameStep setGroupName={this.props.setGroupName}\n                                     setClassSemester={this.props.setClassSemester} \n                                     classSemester={this.props.classSemester}\n                                     universityOfUser={this.props.universityOfUser}\n                                     currentGroupname={this.props.groupName}\n                                     err={this.props.err === 1} \n                                     handleNext={this.props.handleNext}\n                                     groupType={this.props.groupType}\n                                     />\n            case 2:\n                return <ContactsStep contacts={this.props.contacts} \n                                     setContactList={this.props.setContactList} \n                                     handleNext={this.props.handleNext} />\n            case 3:\n                return <LoadingStep />\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Stepper activeStep={this.props.activeStep}>\n                    {this.props.steps.map((label, index) => {\n                        return (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        )\n                    })}\n                </Stepper>\n                <div>\n                    <Typography>{this.getStepContent(this.props.activeStep)}</Typography>\n                </div>\n            </div>\n        ) \n    }\n}\n\nclass NewChatGroupDialog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeStep: 0,\n            err: -1,\n            show: this.props.show,\n            groupType: \"Kulüp\",\n            groupName: \"\",\n            contacts: [this.props.username],\n            universityOfUser: this.props.universityOfUser, // Relevant for class/student club related rooms\n            classSemester: '', // Relevant for class related rooms\n            submitted: false\n        }\n        \n        // Form steps\n        this.steps = [\n            'Grup temasını seç',\n            'Gruba bir isim ver',\n            'Bağlantılarını gruba ekle'\n        ]\n\n        this.handleClose = this.handleClose.bind(this)\n        this.handleNext = this.handleNext.bind(this)\n        this.handleBack = this.handleBack.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n\n        this.setGroupType = this.setGroupType.bind(this)\n        this.setGroupName = this.setGroupName.bind(this)\n        this.setContactList = this.setContactList.bind(this)\n        this.setClassSemester = this.setClassSemester.bind(this)\n    }\n\n    handleClose() {\n        this.setState({\n            show: false\n        })\n        this.props.setActiveTab('')\n    }\n\n    handleBack() {\n        this.setState({\n            activeStep: this.state.activeStep - 1\n        })\n    }\n\n    async handleNext() {\n        // Check if we're at the last step\n        if (this.state.activeStep === 2) {\n            // We're submitting the form\n            this.setState({\n                submitted: true\n            })\n            await this.handleSubmit()\n            return\n        }\n        // If not, proceed depending on the step we're currently in\n        // For group name step, check that it is non-empty\n        if (this.state.activeStep === 1) {\n            const validData = this.state.groupName.trim() !== ''\n            if (!validData) {\n                // Set error on index 1\n                this.setState({\n                    ...this.state,\n                    err: 1\n                })\n                return\n            }\n        }\n        this.setState({\n            ...this.state,\n            activeStep: this.state.activeStep + 1\n        })\n    }\n\n    async handleSubmit() {\n        /* Handle form submission. */\n        const roomData = {\n            type: this.state.groupType,\n        }\n\n        if (this.state.groupType === 'Ders') {\n            roomData['university'] = this.state.universityOfUser\n            roomData['semester'] = this.state.classSemester\n        }\n\n        roomData['typingIndicator'] = {}\n\n        for (let idx=0; idx < this.state.contacts.length; idx++) {\n            roomData['typingIndicator'][ this.state.contacts[idx] ] = false\n        }\n\n        await db.ref(`rooms/${this.state.groupName}`).set(roomData)\n\n        for (let idx=0; idx < this.state.contacts.length; idx++) {\n            await db.ref(`users/${this.state.contacts[idx]}/chats`).push().set({\n                name: this.state.groupName\n            })\n        }\n\n        // Close the dialog once the group is formed\n        this.setState({submitted: false})\n        this.handleClose()\n\n        // Not a great solution, but simply reload the page for now so that the new chat room appears\n        window.location.reload()\n    }\n\n    setGroupType(dataFromChild) {\n        this.setState({\n            ...this.state,\n            groupType: dataFromChild\n        })\n    }\n\n    setGroupName(dataFromChild) {\n        if (this.state.err !== 1) {\n            this.setState({\n                ...this.state,\n                groupName: dataFromChild\n            })\n        }\n        // A bit tricky... If we have an existing warning in the input \n        // text field and user fills it, remove the warning.\n        else {\n            if ((this.state.err === 1) && (dataFromChild !== \"\")) {\n                this.setState({\n                    ...this.state,\n                    err: -1,\n                    groupName: dataFromChild\n                })\n            }\n        }\n    }\n\n    setContactList(dataFromChild) {\n        this.setState({\n            ...this.state,\n            contacts: dataFromChild\n        })\n    }\n\n    setClassSemester(dataFromChild) {\n        this.setState({classSemester: dataFromChild})\n    }\n\n    render() {\n        return (\n            <div>\n                <Dialog open={this.state.show} onClose={this.handleClose}>\n                    <DialogTitle id=\"form-dialog-title\">Yeni Grup Oluştur</DialogTitle>\n                    <DialogContent>\n                        <NewChatGroupFormStepper \n                                universityOfUser={this.props.universityOfUser} \n                                contacts={this.props.contacts} \n                                groupName={this.state.groupName}\n                                setContactList={this.setContactList}\n                                setGroupName={this.setGroupName}\n                                setGroupType={this.setGroupType}\n                                setClassSemester={this.setClassSemester}\n                                classSemester={this.state.classSemester}\n                                groupType={this.state.groupType}\n                                activeStep={this.state.activeStep}\n                                steps={this.steps}\n                                err={this.state.err}\n                                handleNext={this.handleNext}\n                                />\n                    </DialogContent>\n                    <DialogActions>\n                        {this.state.activeStep !== 3 ? (\n                            <Box>\n                                <Button id=\"stepper-button\" disabled={this.state.activeStep === 0} onClick={this.handleBack}>Geri</Button>\n                                <Button id=\"stepper-button\" variant=\"contained\" color=\"primary\" onClick={this.handleNext}>\n                                    {this.state.activeStep === this.steps.length - 1 ? \"Grup Oluştur\" : \"İleri\"}\n                                </Button>\n                            </Box>\n                        ) : (\n                            <Box></Box>\n                        )}\n                    </DialogActions>\n                    <IconButton onClick={this.handleClose} id=\"new-group-form-dialog-close-button\">\n                        <CloseIcon></CloseIcon>\n                    </IconButton>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default NewChatGroupDialog","import React from 'react'\nimport './ProfileLandingPage.css'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport Typography from '@material-ui/core/Typography'\n\nimport { db } from '../../../services/firebase'\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"search-area-container\">\n                <Autocomplete\n                     id=\"group-search-box\" \n                     options={this.props.chatrooms}\n                     getOptionLabel={(chatroom) => chatroom.name}\n                     style={{ width: 600 }}\n                     renderInput={(params) => <TextField {...params} label=\"Topluluk ara\" variant=\"outlined\"/>}\n                /> \n            </div>\n        )\n    }\n}\n\nclass ProfileLandingPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            'chatrooms' : [],\n            'dropdown' : {\n                'chatroomlist' : [],\n                'activeTabId'  : -1\n            }\n        }\n\n        // References\n        this.searchbar = React.createRef()\n\n        this.removeChatRoomDropdown = this.removeChatRoomDropdown.bind(this)\n        this.setChatRoom = this.setChatRoom.bind(this)\n        this.changeActiveChatRoomOnKeystreak = this.changeActiveChatRoomOnKeystreak.bind(this)\n\n    }\n    componentDidMount() {\n        // Search and load the group list\n        fetch('/api/chatrooms', {\n            method: 'GET',\n            headers: {\n                'Content-Type' : 'application/json',\n                'Accept' : 'application/json',\n            }\n        })\n        .then(response => response.json())\n        .then(jsonResponse => {\n            this.setState({\n                ...this.state,\n                'chatrooms' : jsonResponse\n            })\n        })\n    }\n\n    removeChatRoomDropdown() {\n        this.setState({\n            ...this.state,\n            'dropdown' : {\n                'chatroomlist' : [],\n                'activeTabId' : -1\n            }\n        })\n    }\n\n    setChatRoom(e) {\n        e.preventDefault()\n        this.searchbar.current.value = e.target.text\n        // Close the dropdown\n        this.removeChatRoomDropdown()\n        this.searchbar.current.focus()\n    }\n\n    changeActiveChatRoomOnKeystreak(e) {\n        const chatroomInputField = this.searchbar.current.value\n        if (chatroomInputField === '') {\n            return\n        }\n        const currentActiveTab = this.state.dropdown.activeTabId\n        const currentChatroomList = this.state.dropdown.chatroomlist\n\n        if (e.key === 'Enter') {\n            if (currentChatroomList.length ===  0) {\n                return\n            }\n            // Do not submit the form because of the enter keypress lol\n            e.preventDefault()\n            const selectedChatroom = currentChatroomList[currentActiveTab]\n            this.searchbar.current.value = selectedChatroom.name\n            this.removeChatRoomDropdown()\n            return\n        }\n\n        // Escape key\n        if (e.keyCode === 27) {\n            this.removeChatRoomDropdown()\n            return\n        }\n        // Update the active tab ID, based on whether up or down key is pressed\n        // Up key\n        let newActiveTab\n        if (e.keyCode === 38) {\n            if (currentActiveTab < 0) {\n                return\n            }\n            newActiveTab = currentActiveTab - 1\n        }\n        // Down key\n        else if (e.keyCode === 40) {\n            newActiveTab = currentActiveTab + 1\n        }\n\n        // Update the state\n        this.setState({\n            ...this.state,\n            dropdown: {\n                chatroomlist: currentChatroomList,\n                activeTabId: newActiveTab\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"search-bar-container\">\n                    <Typography variant=\"h4\" style={{margin: \"60px 0 30px 0\"}}>Topluluk keşfet</Typography>\n                    <SearchBar chatrooms={this.state.chatrooms}/>\n                    <br></br>\n                    <Button variant=\"contained\" color=\"primary\" style={{width: \"150px\", fontSize: \"20px\", textTransform: \"none\"}}>Ara</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProfileLandingPage","import React from 'react'\nimport {Redirect} from 'react-router-dom';\nimport './HomePage.css'\n\nimport ChatRoom from './components/ChatRoom'\nimport NewChatGroupDialog from './components/NewChatGroupDialog'\nimport ProfileLandingPage from './components/ProfileLandingPage'\nimport HomePageHeader from './components/HomePageHeader'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport Collapse from '@material-ui/core/Collapse'\n\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ChatIcon from '@material-ui/icons/Chat'\nimport AnnouncementIcon from '@material-ui/icons/Announcement'\nimport ContactsIcon from '@material-ui/icons/Contacts'\nimport SearchIcon from '@material-ui/icons/Search'\nimport AddIcon from '@material-ui/icons/Add'\nimport CreateIcon from '@material-ui/icons/Create'\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer'\nimport PersonIcon from '@material-ui/icons/Person'\nimport AddAlertIcon from '@material-ui/icons/AddAlert'\n\nimport { db } from '../../services/firebase'\n\nclass NestedList extends React.Component {\n    /* Reusable nested/collapsable list for left-hand side navigation bar. */\n    constructor(props) {\n        super(props)\n        this.handleClick = this.handleClick.bind(this)\n        this.renderIcon = this.renderIcon.bind(this)\n    }\n\n    handleClick(e) {\n        // Get the parent div element, and extract the ID from it\n        const parent = e.target.closest('.list-item-div')\n        this.props.setActiveTab(parent.id)\n    }\n\n    renderIcon() {\n        if (this.props.type === 'chatroom') {\n            return <QuestionAnswerIcon></QuestionAnswerIcon>\n        }\n        else if (this.props.type === 'contact') {\n            return <PersonIcon></PersonIcon>\n        }\n        else if (this.props.type === 'announcement') {\n            return <AddAlertIcon></AddAlertIcon>\n        }\n     }\n\n    render() {\n        return (\n            <Collapse in={this.props.show}>\n                <List component=\"div\">\n                    {this.props.items.map(item => {\n                        return (\n                            <div className=\"list-item-div\" id={item}>\n                                <ListItem button selected={item === this.props.activeTabId} style={{\"padding-left\": \"35px\"}} onClick={this.handleClick}>\n                                    <ListItemIcon>{this.renderIcon()}</ListItemIcon>\n                                    <ListItemText primary={item} />\n                                </ListItem>\n                            </div>\n                        )\n                    })}\n                </List>\n            </Collapse>\n        )\n    }\n}\n\nclass LeftNavigation extends React.Component {\n    /* Navigation on the left hand side of the user page. */\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeTabId: this.props.activeTabId,\n            nests: {\n                chatroomsOpen: true,\n                announcementsOpen: true,\n                contactsOpen: true,\n            }\n        }\n    \n        this.handleClickChatrooms = this.handleClickChatrooms.bind(this)\n        this.handleClickAnnouncements = this.handleClickAnnouncements.bind(this)\n        this.handleClickContacts = this.handleClickContacts.bind(this)\n        this.handleClickNewGroup = this.handleClickNewGroup.bind(this)\n        this.handleClickGroupSearch = this.handleClickGroupSearch.bind(this)\n\n    }\n\n    handleClickChatrooms() {\n        this.setState({\n            ...this.state,\n            nests: {\n                chatroomsOpen: !this.state.nests.chatroomsOpen,\n                announcementsOpen: this.state.nests.announcementsOpen,\n                contactsOpen: this.state.nests.contactsOpen\n            }\n        })\n    }\n\n    handleClickAnnouncements() {\n        this.setState({\n            ...this.state,\n            nests: {\n                chatroomsOpen: this.state.nests.chatroomsOpen,\n                announcementsOpen: !this.state.nests.announcementsOpen,\n                contactsOpen: this.state.nests.contactsOpen\n            }\n        })\n    }\n\n    handleClickContacts() {\n        this.setState({\n            ...this.state,\n            nests: {\n                chatroomsOpen: this.state.nests.chatroomsOpen,\n                announcementsOpen: this.state.nests.announcementsOpen,\n                contactsOpen: !this.state.nests.contactsOpen\n            }\n        })\n    }\n\n    handleClickNewGroup() {\n        const id = \"new-group-form\"\n        this.props.setActiveTab(id)\n    }\n\n    handleClickGroupSearch() {\n        const id = \"group-search\"\n        this.props.setActiveTab(id)\n    }\n\n    render() {\n        return (\n            <div>\n                <List component=\"nav\">\n                    <ListItem button onClick={this.handleClickChatrooms}>\n                        <ListItemIcon>\n                            <ChatIcon></ChatIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Chat Odaları\" />\n                        {this.state.nests.chatroomsOpen ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                    <NestedList show={this.state.nests.chatroomsOpen} items={this.props.chatrooms} type=\"chatroom\" setActiveTab={this.props.setActiveTab} activeTabId={this.props.activeTabId} /> \n                    <ListItem button onClick={this.handleClickAnnouncements}>\n                        <ListItemIcon>\n                            <AnnouncementIcon></AnnouncementIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Duyurular\" />\n                        {this.state.nests.announcementsOpen ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                    <NestedList show={this.state.nests.announcementsOpen} items={this.props.announcement_rooms} type=\"announcement\" setActiveTab={this.props.setActiveTab} activeTabId={this.props.activeTabId} /> \n                    <ListItem button onClick={this.handleClickContacts}>\n                        <ListItemIcon>\n                            <ContactsIcon></ContactsIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Arkadaşlar\" />\n                        {this.state.nests.contactsOpen ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                    <NestedList show={this.state.nests.contactsOpen} items={this.props.contacts} type=\"contact\" setActiveTab={this.props.setActiveTab} activeTabId={this.props.activeTabId} /> \n                    <Divider />\n                    <ListItem button onClick={this.handleClickGroupSearch} selected={this.props.activeTabId === \"group-search\"}>\n                        <ListItemIcon>\n                            <SearchIcon></SearchIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Keşfet\" />\n                    </ListItem>\n                    <ListItem button onClick={this.handleClickNewGroup} selected={this.props.activeTabId === \"new-group-form\"} >\n                        <ListItemIcon>\n                            <CreateIcon></CreateIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Yeni Grup Oluştur\" />\n                    </ListItem>\n                    <ListItem button onClick={null}>\n                        <ListItemIcon>\n                            <AddIcon></AddIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Yeni Arkadaş Ekle\" />\n                    </ListItem>\n                </List>\n            </div>\n        )\n    }\n}\n\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        let username = null;\n        if (sessionStorage.getItem('token') !== null) {\n            username = JSON.parse(sessionStorage.getItem('token')).username;\n        }\n\n        else if (localStorage.getItem('token') !== null) {\n            username = JSON.parse(localStorage.getItem('token')).username;    \n        }\n        \n        this.state = {\n            username: username,\n            name: '',\n            university: '',\n            chat_rooms: [], // Initially empty, to be fetched from the database and updated as page loads\n            contacts: [], // Initially empty, to be fetched from the database and updated as page loads\n            announcement_rooms: [\n                // {roomId: \"a-room-1\", name: \"Staj\", type: \"announcement\"},\n                // {roomId: \"a-room-2\", name: \"Ev/Yurt\", type: \"announcement\"},\n                \"Staj\", \n                \"Ev/Yurt\",\n            ],\n            activeTabId: 'group-search',\n        };\n        this.isActiveTab = this.isActiveTab.bind(this)\n        this.setActiveTab = this.setActiveTab.bind(this)\n        this.renderMainSide = this.renderMainSide.bind(this)\n        this.userLoggedIn = this.userLoggedIn.bind(this)\n    }\n    \n    handleLogout(e) {\n        /* \n        Upon logout, remove the user tokens from the session and local storages.\n        Token in local storage may or may not exist, but we still need to check there.\n        */\n        e.preventDefault();\n        sessionStorage.removeItem('token');\n        localStorage.removeItem('token');\n        window.location.reload();\n    }\n\n    userLoggedIn() {\n        // Check the session and local storages for user token\n        const tokenStringFromSS = sessionStorage.getItem('token');\n        const userTokenFromSS = JSON.parse(tokenStringFromSS);\n        if (userTokenFromSS?.token) {\n            return true\n        }\n\n        const tokenStringFromLS = localStorage.getItem('token')\n        const userTokenFromLS = JSON.parse(tokenStringFromLS)\n        if (userTokenFromLS?.token) {\n            return true\n        }\n        return false\n    }\n\n    isActiveTab(tabId) {\n        return this.state.activeTabId === tabId;\n    }\n\n    setActiveTab(tabid) {\n        this.setState({activeTabId: tabid});\n    }\n\n    componentDidMount() {\n        /* Collect the necessary data about the user: Full name, university, list of chat rooms etc. */\n        if (this.userLoggedIn()) {\n            db.ref(`users/${this.state.username}`).once('value').then(snapshot => {\n                const data = snapshot.val()\n\n                let chats = []\n                if (data.chats) {\n                    chats = Object.values(data.chats).map(item => item.name)\n                }\n                \n                let contacts = []\n                if (data.contacts) {\n                    contacts = Object.values(data.contacts).map(item => item.name)\n                }\n                this.setState({\n                    chat_rooms: chats,\n                    contacts: contacts,\n                    name: data.name,\n                    university: data.university,\n                })\n            }\n        )}\n    }\n\n    renderMainSide() {\n        /* Render main (central) side of the home page depending on the tab being selected. */\n        const activeTabId = this.state.activeTabId;\n        // Empty page if no tab is selected (initial default)\n        if (activeTabId === 'group-search') {\n            return <ProfileLandingPage />\n        }\n        // New chat group creation form\n        else if (this.state.activeTabId.includes('new')) {\n            // Need to create an additional ID \"c-room-idx\" for the new room being created\n            // In the database, we store each room with an ID like \"c-room-idx-generated_hash\" \n            // (in addition to _id generated by mongodb)\n            // let newRoomId;\n            // if (this.state.chat_rooms.length !== 0) {\n            //     const latestId = this.state.chat_rooms[this.state.chat_rooms.length - 1].roomId\n            //     const latestIdSplit = latestId.split('-')\n            //     newRoomId = `c-room-${Number(latestIdSplit[latestIdSplit.length-2]) + 1}`\n            // }\n            // // If there are no other chat rooms present, this would be the first one with ID: \"c-room-1\"\n            // else {\n            //     newRoomId = \"c-room-1\"\n            // }\n            return (\n                <NewChatGroupDialog \n                    show={true}\n                    username={this.state.username} \n                    setActiveTab={this.setActiveTab} \n                    universityOfUser={this.state.university} \n                    contacts={this.state.contacts} \n                    />\n            )\n        }\n        else if (this.state.activeTabId !== '') {\n            return (\n                <ChatRoom \n                    username={this.state.username}\n                    roomId={activeTabId}\n                />\n            );\n        }\n        else {\n            return\n        }\n    }\n\n    render() {\n        // Login needed for access to this page\n        // If we can't find the login token stored, redirect to login page\n        if (!this.userLoggedIn()) {\n            return <Redirect to=\"/login\" />\n        }\n\n        return (\n            <div className=\"home-container\">\n                <HomePageHeader username={this.state.username} name={this.state.name} handleLogout={this.handleLogout}/> \n                <div className=\"flex-container\">\n                    <div className=\"home-sidebar\">\n                        <LeftNavigation \n                            chatrooms={this.state.chat_rooms} \n                            announcement_rooms={this.state.announcement_rooms} \n                            contacts={this.state.contacts} \n                            setActiveTab={this.setActiveTab} \n                            activeTabId={this.state.activeTabId}\n                            />\n                    </div>\n                    <div className=\"home-main\">  \n                        {this.renderMainSide()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React from 'react'\nimport './Header.css'\nimport {NavLink} from 'react-router-dom'\n\nimport Button from '@material-ui/core/Button'\n\nconst button_styles = {\n    \"textTransform\": \"none\",\n    \"border\" : \"none\",\n    \"fontSize\" : \"20px\",\n    \"margin\" : \"5px 25px\",\n}\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div id=\"header\">\n                <h1 className=\"greeting\">Merhaba!</h1>\n                <p className=\"greeting\">Kampüste Kal ile üniversitene her zaman ve her yerde bağlı kal!</p>\n                <div className=\"register-login-button-container\">\n                    <NavLink className=\"home-nav-item\" to=\"/register\">\n                        <Button variant=\"contained\" color=\"inherit\" style={{...button_styles, \"color\": \"black\"}}>\n                            Kaydol\n                        </Button>\n                    </NavLink>\n                    <NavLink className=\"home-nav-item\" to=\"/login\">\n                        <Button variant=\"contained\" color=\"primary\" style={{...button_styles, \"color\": \"white\"}}>\n                            Giriş Yap\n                        </Button>\n                    </NavLink>\n                </div>\n                <h3 id=\"hidden\">Hidden</h3>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react'\nimport './Navigation.css'\nimport {NavLink} from 'react-router-dom'\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props)\n    this.displayLogout = this.displayLogout.bind(this)\n  }\n  \n  displayLogout() {\n    /* Depending on the \"displayLogoutButton\" prop being given by the parent, display or hide the logout button. */\n    if (this.props.displayLogoutButton) {\n      return (\n        <div className=\"logout-button-container\">\n        <button type=\"submit\" className=\"logout-button\" onClick={this.props.handleLogout}>Çıkış Yap</button>\n        </div>\n      )\n    }\n    else {\n      return <></>\n    }\n  }\n  render() {\n    return (\n      <div id=\"navigation\">\n        <nav>\n          <ul className=\"nav-items\">\n            <li className=\"nav-link\"><NavLink className=\"nav-item\" to=\"/\">#KampüsteKal</NavLink></li>\n            <li className=\"nav-link\"><NavLink className=\"nav-item\" to=\"/\">Blog</NavLink></li>\n            <li className=\"nav-link\"><NavLink className=\"nav-item\" to=\"/\">İletişim</NavLink></li>\n          </ul>\n        </nav>\n        {this.displayLogout()}\n      </div>\n    )\n  }\n}\n\nexport default Navigation;","import React from 'react';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <footer id=\"footer-div\">\n                    <ul className=\"footer-items\">\n                        <li><a href=\"/\">Kampüste Kal</a></li>\n                        <li><a href=\"/\">Podcastler</a></li>\n                        <li><a href=\"/\">Bloglar</a></li>\n                        <li><a href=\"/\">İletişim</a></li>\n                    </ul>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport './Description.css';\n\nclass Description extends React.Component {\n\n    render() {\n        return (\n            <div id=\"description\">\n                <div id=\"sectionOne\">\n                    <h2 className=\"sectionOne-title\">Herkes için yeni bir üniversite platformu</h2>\n                    <p className=\"desc\">Kampüste Kal ile universiteden istediğin kişilerle iletişim kurabilir, \n                    istediğin kişilerle bilgi paylaşabilirsin.</p>\n                </div>\n                <div id=\"imageOne\">\n                    <img alt=\"\" id=\"img1\" src=\"KocUniversity.jpg\"></img>\n                </div>\n                <div id=\"sectionTwo\">\n                    <h2 className=\"sectionTwo-title\">Konuşma Gruplarına Katıl</h2>\n                    <p className=\"desc\">İlgini çeken konuşma gruplarına istek yolla ve kolayca katıl.\n                    Güvenli bir şekilde konuşma odalarında üniversitenden insanlarla iletişim kur.</p>\n                </div>\n            </div>\n        );  \n    }\n\n}\n\nexport default Description;","import React from 'react';\nimport Navigation from './components/Navigation';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Description from './components/Description';\nimport HomePageHeader from '../HomePage/components/HomePageHeader'\nimport './LandingPage.css';\n\nclass Home extends React.Component {\n  \n  render() {\n    return (\n      <div>\n        <HomePageHeader />\n        <Header />\n        <Description />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport RegisterPage from './pages/RegisterPage/RegisterPage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport AdminPage from './pages/AdminPage/AdminPage';\nimport HomePage from './pages/HomePage/HomePage';\nimport LandingPage from './pages/LandingPage/LandingPage';\n\nimport { auth } from './services/firebase'\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setToken = this.setToken.bind(this);\n    this.getToken = this.getToken.bind(this);\n  }\n\n  setToken(token) {\n    sessionStorage.setItem('token', JSON.stringify(token));\n  }\n\n  getToken() {\n    const tokenString = sessionStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken?.token;\n  }\n  \n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/\" exact component={LandingPage} />\n            <Route path=\"/register\" component={RegisterPage} />\n            <Route path=\"/home\">\n              <HomePage getToken={this.getToken} setToken={this.setToken} />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage getToken={this.getToken} setToken={this.setToken} />\n            </Route>\n            <Route path=\"/admin\">\n              <AdminPage getToken={this.getToken} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}